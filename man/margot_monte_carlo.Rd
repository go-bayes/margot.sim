% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/margot-monte-carlo.R
\name{margot_monte_carlo}
\alias{margot_monte_carlo}
\title{Monte Carlo Framework for margot}
\usage{
margot_monte_carlo(
  n_reps = 500,
  n_per_rep = 1000,
  dgp_params = list(),
  shadows = list(),
  estimator_fn = NULL,
  truth_fn = NULL,
  extract_fn = NULL,
  parallel = getOption("margot.parallel", FALSE),
  n_cores = NULL,
  seed = getOption("margot.seed", NULL),
  verbose = getOption("margot.verbose", TRUE),
  save_data = FALSE,
  memory_limit = getOption("margot.max_memory", NULL),
  summarize_fn = NULL,
  checkpoint_dir = getOption("margot.cache_dir", NULL)
)
}
\arguments{
\item{n_reps}{Number of Monte Carlo replications}

\item{n_per_rep}{Sample size per replication}

\item{dgp_params}{List of parameters for margot_simulate_causal()}

\item{shadows}{List of shadow objects to apply to the data}

\item{estimator_fn}{Function that takes data and returns estimate(s)}

\item{truth_fn}{Optional function to compute true parameter value}

\item{extract_fn}{Optional function to extract additional information}

\item{parallel}{Logical, use parallel processing?}

\item{n_cores}{Number of cores for parallel processing}

\item{seed}{Random seed}

\item{verbose}{Print progress?}

\item{save_data}{Logical, save datasets from each replication?}

\item{memory_limit}{Maximum memory usage in GB (e.g., "4GB")}

\item{summarize_fn}{Optional function to summarize results during simulation}

\item{checkpoint_dir}{Directory for saving intermediate checkpoints}
}
\value{
Object of class "margot_mc_results" with simulation results
}
\description{
This file implements Monte Carlo simulation capabilities for evaluating
statistical estimators under various shadowing conditions.
Run Monte Carlo simulation to evaluate estimator performance
}
\examples{
\dontrun{
# Define estimator
my_estimator <- function(data) {
  fit <- lm(t3_y ~ t2_a + t1_a + b1, data = data)
  list(
    estimate = coef(fit)["t2_a"],
    se = sqrt(diag(vcov(fit)))["t2_a"],
    converged = TRUE
  )
}

# Run simulation
results <- margot_monte_carlo(
  n_reps = 500,
  n_per_rep = 1000,
  dgp_params = list(
    waves = 3,
    params = list(a_lag_y_coef = 0.3)
  ),
  estimator_fn = my_estimator
)
}
}
