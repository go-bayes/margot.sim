[{"path":"https://yourusername.github.io/margot.sim/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Joseph Bulbulia Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://yourusername.github.io/margot.sim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Bulbulia. Author, maintainer.","code":""},{"path":"https://yourusername.github.io/margot.sim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bulbulia J (2025). margot.sim: Simulate Longitudinal Data Masking Monte Carlo Evaluation. R package version 0.1.0, https://yourusername.github.io/margot.sim/.","code":"@Manual{,   title = {margot.sim: Simulate Longitudinal Data with Masking and Monte Carlo Evaluation},   author = {Joseph Bulbulia},   year = {2025},   note = {R package version 0.1.0},   url = {https://yourusername.github.io/margot.sim/}, }"},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"margotsim","dir":"","previous_headings":"","what":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"R package simulating longitudinal data realistic observational shadows (measurement error, missingness, selection bias) evaluating causal inference methods via Monte Carlo simulation.","code":""},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"can install development version margot.sim GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"go-bayes/margot.sim\")"},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"margot.sim extends margot package : Shadowing Framework - Apply observational distortions (measurement error, missingness, selection bias) Monte Carlo Framework - Systematically evaluate statistical estimators Flexible Distributions - Specify non-normal distributions Integrated Workflows - Complete simulation studies","code":""},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"","code":"library(margot.sim)  # Generate data with measurement error shadow <- create_shadow(   type = \"measurement_error\",   params = list(     variables = c(\"t1_l\", \"t2_l\"),     error_type = \"classical\",     sigma = 0.5   ) )  dat <- margot_simulate(   n = 1000,   waves = 3,   shadows = shadow )  # Run Monte Carlo evaluation mc_results <- margot_monte_carlo(   n_reps = 100,   n_per_rep = 500,   dgp_params = list(waves = 2),   shadows = list(shadow),   estimator_fn = function(data) {     fit <- lm(t3_y ~ t2_a + t1_l + b1, data = data)     list(       estimate = coef(fit)[\"t2_a\"],       se = sqrt(diag(vcov(fit)))[\"t2_a\"]     )   } )  print(mc_results)"},{"path":[]},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"available-shadow-types","dir":"","previous_headings":"Shadowing Framework","what":"Available Shadow Types","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"Measurement Error: - Classical error (continuous variables) - Misclassification (binary variables) - Differential error - Dichotomization - Correlated errors Missing Data: Selection Bias:","code":"# Classical measurement error me_shadow <- create_shadow(   type = \"measurement_error\",   params = list(     variables = \"t1_l\",     error_type = \"classical\",     sigma = 0.5   ) )  # Misclassification for binary variables misclass_shadow <- create_shadow(   type = \"measurement_error\",    params = list(     variables = \"t1_a\",     error_type = \"misclassification\",     sensitivity = 0.85,  # P(observed=1|true=1)     specificity = 0.90   # P(observed=0|true=0)   ) ) # Item-level missingness miss_shadow <- create_item_missingness_shadow(   variables = c(\"t1_l\", \"t2_l\"),   missing_rate = 0.2,   missing_mechanism = \"MAR\",   dependent_vars = \"b1\" ) # Positivity violations pos_shadow <- create_positivity_shadow(   exposure_var = \"t1_a\",   filter_fn = function(data) {     # Treatment only possible if risk score <= 2     data$b1 + data$b2 <= 2   } )"},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"combining-shadows","dir":"","previous_headings":"Shadowing Framework","what":"Combining Shadows","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"","code":"# Apply multiple shadows shadows <- list(me_shadow, miss_shadow) dat <- margot_simulate(n = 1000, waves = 3, shadows = shadows)  # Or apply post-hoc shadowed_data <- apply_shadows(dat, shadows)"},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"monte-carlo-framework","dir":"","previous_headings":"","what":"Monte Carlo Framework","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"Evaluate estimator performance various conditions:","code":"# Define estimator ipw_estimator <- function(data) {   # Fit propensity score model   ps_model <- glm(t1_a ~ b1 + b2 + t0_l,                    data = data,                    family = binomial)   ps <- predict(ps_model, type = \"response\")      # Calculate weights   weights <- ifelse(data$t1_a == 1, 1/ps, 1/(1-ps))      # Outcome model   fit <- lm(t2_y ~ t1_a, weights = weights, data = data)      list(     estimate = coef(fit)[\"t1_a\"],     se = sqrt(diag(vcov(fit)))[\"t1_a\"],     converged = TRUE   ) }  # Run simulation results <- margot_monte_carlo(   n_reps = 500,   n_per_rep = 1000,   dgp_params = list(     waves = 2,     params = list(a_lag_y_coef = 0.3)  # True effect   ),   shadows = list(me_shadow, miss_shadow),   estimator_fn = ipw_estimator,   truth_fn = function(data) 0.3,   parallel = TRUE,   n_cores = 4 )  # View results print(results) plot(results, type = \"histogram\")"},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"performance-metrics","dir":"","previous_headings":"Monte Carlo Framework","what":"Performance Metrics","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"framework automatically calculates: - Bias relative bias - Variance MSE - Coverage confidence intervals - Convergence rates - Sample size retention","code":""},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"complete-example","dir":"","previous_headings":"","what":"Complete Example","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"","code":"# Compare estimators under measurement error comparison <- example_measurement_error_comparison()  # Full workflow demonstration results <- example_complete_workflow()"},{"path":[]},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"custom-shadows","dir":"","previous_headings":"Advanced Usage","what":"Custom Shadows","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"Create shadow types:","code":"# Define apply method apply_shadow.my_custom_shadow <- function(data, shadow, ...) {   # Your shadowing logic here   data }  # Use it shadow <- structure(   list(type = \"my_custom\", params = list(...)),   class = c(\"my_custom_shadow\", \"margot_shadow\") )"},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"flexible-distributions","dir":"","previous_headings":"Advanced Usage","what":"Flexible Distributions","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"","code":"# Non-normal baseline gamma_dist <- create_distribution(   \"gamma\",   params = list(shape = 2, rate = 1) )  # Use in simulation dat <- margot_simulate_flex(   n = 1000,   distributions = list(baseline = gamma_dist) )"},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"detailed documentation, see:","code":"# Package documentation ?margot.sim  # Key functions ?create_shadow ?margot_monte_carlo ?margot_simulate  # Examples example(create_shadow) example(margot_monte_carlo)"},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"Contributions welcome! Please: Fork repository Create feature branch Add tests new functionality Submit pull request","code":""},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"MIT License","code":""},{"path":"https://yourusername.github.io/margot.sim/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Simulate Longitudinal Data with Masking and Monte Carlo Evaluation","text":"use margot.sim research, please cite:","code":"citation(\"margot.sim\")"},{"path":[]},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"project-overview","dir":"","previous_headings":"","what":"Project Overview","title":"margot Extensions Development Brief","text":"extending margot R package, simulates longitudinal data using Structural Causal Models (SCMs). goal add sophisticated capabilities : Applying various “shadows” (censoring, measurement error, selection bias) simulated data Running Monte Carlo simulations evaluate statistical estimators Supporting flexible, non-normal distributions Creating unified framework causal inference method evaluation","code":""},{"path":[]},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"existing-margot-functions-already-implemented","dir":"","previous_headings":"Current State","what":"Existing margot Functions (Already Implemented)","title":"margot Extensions Development Brief","text":"margot_simulate() - Main simulation function margot_simulate_causal() - Wrapper causal inference interventions apply_censoring_post_hoc() - Applies censoring data generation Complete SCM semi-Markovian structure","code":""},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"critical-dependencies--technical-debt","dir":"","previous_headings":"Current State","what":"Critical Dependencies & Technical Debt","title":"margot Extensions Development Brief","text":"Build replacement function scratch Preserve essential features like temporal ordering variables (left right dataframe) existing function available R/-develop folder reference Item-level missingness (item_missing_rate): Apply missingness individual variables rather whole-scale censoring Positivity violations (positivity parameter): Simulate scenarios certain exposure levels impossible individuals","code":""},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"new-extension-files-created","dir":"","previous_headings":"Current State","what":"New Extension Files Created","title":"margot Extensions Development Brief","text":"margot_shadows.R - Unified shadowing framework margot_monte_carlo.R - Monte Carlo simulation tools margot_distributions.R - Flexible distribution specifications margot_examples_integrated.R - Complete workflow examples","code":""},{"path":[]},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"core-philosophy","dir":"","previous_headings":"Architecture & Design Principles","what":"Core Philosophy","title":"margot Extensions Development Brief","text":"key insight: Generate complete, true data first, apply distortions. allows direct calculation true effects bias.","code":"Truth Generation → Intervention → Post-hoc Shadowing → Estimation → Evaluation"},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"causal-inference-foundations","dir":"","previous_headings":"Architecture & Design Principles","what":"Causal Inference Foundations","title":"margot Extensions Development Brief","text":"Positivity Counterfactual Contrasts: True causal effects require comparing outcomes different exposures population. Every individual must able (counter fact) receive every exposure level. positivity violated: - individuals receive certain exposures - Causal effects become ill-defined individuals - Estimators may exhibit extreme weights fail Item-Level vs Unit-Level Missingness: Traditional censoring removes entire units analysis. Item-level missingness nuanced: - Individual variables can missing others observed - Creates partial information scenarios - realistic many applications (lab values, survey items)","code":""},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"technical-architecture","dir":"","previous_headings":"Architecture & Design Principles","what":"Technical Architecture","title":"margot Extensions Development Brief","text":"","code":"# 1. Generate true data under intervention true_data <- margot_simulate_causal(   interventions = list(treat = ..., control = ...) )  # 2. Apply shadows (new functionality) shadowed_data <- apply_shadows(   true_data,   shadows = list(     measurement_error_shadow,     selection_bias_shadow   ) )  # 3. Evaluate estimators (new functionality) mc_results <- margot_monte_carlo(   estimator_fn = function(data) { ... },   shadows = shadows,   n_reps = 500 )"},{"path":[]},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"task-0-replace-external-dependencies-priority","dir":"","previous_headings":"Implementation Tasks","what":"Task 0: Replace External Dependencies (Priority)","title":"margot Extensions Development Brief","text":"Build internal replacement margot_process_longitudinal_data_wider():","code":"# margot_process_data.R margot_process_longitudinal <- function(     df_wide,     exposure_vars = NULL,     outcome_vars = NULL,     preserve_temporal_order = TRUE ) {   # Key requirements:   # 1. Maintain temporal ordering (t0_var, t1_var, ..., tn_var)   # 2. Create censoring indicators   # 3. Handle missing data appropriately      # Implementation based on existing function in R/to-develop/ }"},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"task-1-integrate-shadowing-with-margot_simulate","dir":"","previous_headings":"Implementation Tasks","what":"Task 1: Integrate Shadowing with margot_simulate","title":"margot Extensions Development Brief","text":"Currently, apply_censoring_post_hoc() separate. need :","code":"# Modify margot_simulate to accept shadows parameter margot_simulate <- function(     ...,     shadows = NULL,  # NEW     apply_shadows_post_hoc = TRUE  # NEW ) {   # Existing generation code...      # At the end, if shadows provided:   if (!is.null(shadows) && apply_shadows_post_hoc) {     df <- apply_shadows(df, shadows)   }      df }"},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"task-2-enhance-measurement-error-shadows","dir":"","previous_headings":"Implementation Tasks","what":"Task 2: Enhance Measurement Error Shadows","title":"margot Extensions Development Brief","text":"Add sophisticated measurement error types:","code":"# Berkson error (true X affects measured X) apply_berkson_error <- function(data, params) {   # Implementation needed }  # Correlated errors across time apply_temporal_correlated_error <- function(data, params) {   # AR(1) structure for measurement errors }  # Heteroscedastic errors apply_heteroscedastic_error <- function(data, params) {   # Error variance depends on true value }"},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"task-3-implement-missing-features-as-shadows","dir":"","previous_headings":"Implementation Tasks","what":"Task 3: Implement Missing Features as Shadows","title":"margot Extensions Development Brief","text":"Add item-level missingness positivity violations shadow types:","code":"# Item-level missingness shadow create_item_missingness_shadow <- function(     variables,     missing_rate,     missing_mechanism = c(\"MCAR\", \"MAR\", \"MNAR\"),     dependent_vars = NULL ) {   create_shadow(     type = \"item_missingness\",     params = list(       variables = variables,       rate = missing_rate,       mechanism = missing_mechanism,       dependent_vars = dependent_vars     )   ) }  # Positivity violation shadow (filters impossible exposures) create_positivity_shadow <- function(     exposure_var,     filter_fn,  # Function that returns TRUE for valid exposures     name = \"positivity_filter\" ) {   # This shadow removes individuals who cannot receive certain exposures   # Critical for understanding bias when positivity is violated   create_shadow(     type = \"positivity\",     params = list(       exposure_var = exposure_var,       filter_fn = filter_fn     )   ) }  # Implementation example apply_shadow.positivity_shadow <- function(data, shadow, ...) {   # Filter rows where exposure is possible   valid_rows <- shadow$params$filter_fn(data)   data[valid_rows, ] }"},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"task-4-complete-distribution-integration","dir":"","previous_headings":"Implementation Tasks","what":"Task 4: Complete Distribution Integration","title":"margot Extensions Development Brief","text":"current margot_simulate_flex() placeholder. Need : Modify core generation loops margot_simulate() use custom distributions Handle correlation structures non-normal distributions Ensure proper link functions binary/count outcomes","code":"# Inside margot_simulate generation loop if (!is.null(distributions)) {   # Generate L_t with custom distribution   l_dist <- distributions$confounder   mu_l <- ... # existing linear predictor   df[[paste0(\"t\", t, \"_l\")]] <- generate_from_dist(l_dist, n, mu_l) } else {   # Existing normal generation   df[[paste0(\"t\", t, \"_l\")]] <- mu_l + rnorm(n) }"},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"task-4-complete-distribution-integration-1","dir":"","previous_headings":"Implementation Tasks","what":"Task 4: Complete Distribution Integration","title":"margot Extensions Development Brief","text":"current margot_simulate_flex() placeholder. Need : Modify core generation loops margot_simulate() use custom distributions Handle correlation structures non-normal distributions Ensure proper link functions binary/count outcomes","code":"# Inside margot_simulate generation loop if (!is.null(distributions)) {   # Generate L_t with custom distribution   l_dist <- distributions$confounder   mu_l <- ... # existing linear predictor   df[[paste0(\"t\", t, \"_l\")]] <- generate_from_dist(l_dist, n, mu_l) } else {   # Existing normal generation   df[[paste0(\"t\", t, \"_l\")]] <- mu_l + rnorm(n) }"},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"task-5-add-estimator-library","dir":"","previous_headings":"Implementation Tasks","what":"Task 5: Add Estimator Library","title":"margot Extensions Development Brief","text":"Create pre-built estimator functions common methods:","code":"# margot_estimators.R  #' IPTW estimator margot_iptw <- function(data, outcome_var, treatment_vars, baseline_vars) {   # Implementation }  #' G-computation estimator   margot_gcomp <- function(data, outcome_var, treatment_vars, confounder_vars) {   # Implementation }  #' TMLE wrapper (requires tmle package) margot_tmle <- function(data, ...) {   # Implementation }  #' LMTP wrapper (requires lmtp package) margot_lmtp <- function(data, ...) {   # Implementation }"},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"task-6-parallel-processing-enhancements","dir":"","previous_headings":"Implementation Tasks","what":"Task 6: Parallel Processing Enhancements","title":"margot Extensions Development Brief","text":"Improve Monte Carlo parallel processing:","code":"# Better cluster management setup_margot_cluster <- function(n_cores = NULL, export_objects = NULL) {   # Create and configure cluster   # Export margot functions automatically   # Return cluster object }  # Memory-efficient parallel processing margot_monte_carlo_chunked <- function(..., chunk_size = 100) {   # Process simulations in chunks to manage memory }"},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"task-7-diagnostic-and-visualization-tools","dir":"","previous_headings":"Implementation Tasks","what":"Task 7: Diagnostic and Visualization Tools","title":"margot Extensions Development Brief","text":"","code":"# margot_diagnostics.R  #' Comprehensive diagnostic report diagnose_simulation <- function(sim_results, output_format = \"html\") {   # Generate full diagnostic report   # - DAG visualization   # - Parameter recovery   # - Shadowing effects   # - Estimator performance }  #' Interactive visualization plot_mc_results_interactive <- function(mc_results) {   # Use plotly for interactive plots }"},{"path":[]},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"with-existing-margot-code","dir":"","previous_headings":"Integration Points","what":"With Existing margot Code","title":"margot Extensions Development Brief","text":"margot_simulate(): Add distributions shadows parameters margot_process_longitudinal_data_wider(): Ensure compatibility shadowed data Metadata: Extend margot_meta attribute track applied shadows","code":""},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"with-external-packages","dir":"","previous_headings":"Integration Points","what":"With External Packages","title":"margot Extensions Development Brief","text":"","code":"# Create wrappers for common packages margot_to_lmtp <- function(margot_data) {   # Convert to lmtp format }  margot_to_grf <- function(margot_data) {   # Convert to grf format }  margot_from_mice <- function(mice_imputed_data) {   # Import imputed data back to margot }"},{"path":[]},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"unit-tests","dir":"","previous_headings":"Testing Requirements","what":"Unit Tests","title":"margot Extensions Development Brief","text":"","code":"# test_shadows.R test_that(\"measurement error increases variance\", {   data <- margot_simulate(n = 1000, waves = 2)   shadow <- create_shadow(\"measurement_error\", params = list(sigma = 1))   shadowed <- apply_shadow(data, shadow)   expect_gt(var(shadowed$t1_l), var(data$t1_l)) })  # test_monte_carlo.R   test_that(\"Monte Carlo recovers true effect with no shadowing\", {   results <- margot_monte_carlo(     n_reps = 100,     estimator_fn = perfect_estimator,     shadows = NULL   )   expect_lt(abs(results$performance$bias), 0.01) })"},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"integration-tests","dir":"","previous_headings":"Testing Requirements","what":"Integration Tests","title":"margot Extensions Development Brief","text":"Full workflow simulation → shadowing → estimation Performance benchmarks Memory usage tests","code":""},{"path":[]},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"vignettes-needed","dir":"","previous_headings":"Documentation Requirements","what":"Vignettes Needed","title":"margot Extensions Development Brief","text":"Getting Started Shadowing - Basic measurement error example Monte Carlo Evaluation - Comparing estimators systematically Advanced Distributions - Using non-normal distributions Method Evaluation - Complete workflow paper/analysis","code":""},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"function-documentation","dir":"","previous_headings":"Documentation Requirements","what":"Function Documentation","title":"margot Extensions Development Brief","text":"functions need: - Clear @description - @param parameters - @return description - @examples (least one) - @export user-facing functions","code":""},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"performance-considerations","dir":"","previous_headings":"","what":"Performance Considerations","title":"margot Extensions Development Brief","text":"Implement chunked processing Option save intermediate data Parallel processing default Pre-compile estimator functions Vectorize possible Check extreme weights IPW Truncate/windsorize needed Handle edge cases gracefully","code":""},{"path":[]},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"phase-1-core-integration-priority","dir":"","previous_headings":"Next Development Steps","what":"Phase 1: Core Integration (Priority)","title":"margot Extensions Development Brief","text":"Replace margot_process_longitudinal_data_wider() dependency Implement item missingness positivity shadows Integrate shadowing system margot_simulate() Complete distribution integration Add basic estimator library Write essential tests","code":""},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"phase-2-enhanced-features","dir":"","previous_headings":"Next Development Steps","what":"Phase 2: Enhanced Features","title":"margot Extensions Development Brief","text":"Advanced measurement error types Improved parallel processing Diagnostic tools External package integration","code":""},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"phase-3-polish--release","dir":"","previous_headings":"Next Development Steps","what":"Phase 3: Polish & Release","title":"margot Extensions Development Brief","text":"Complete documentation Performance optimization CRAN preparation Publication examples","code":""},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"code-style-guidelines","dir":"","previous_headings":"","what":"Code Style Guidelines","title":"margot Extensions Development Brief","text":"Use tidyverse style guide Lowercase function names underscores Explicit return() statements Comment complex logic Use @keywords internal non-exported functions","code":""},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"questions-for-development","dir":"","previous_headings":"","what":"Questions for Development","title":"margot Extensions Development Brief","text":"shadows applied inside margot_simulate() always post-hoc? deep external package integration go? ’s priority: flexibility ease use? create separate margot.shadows package? positivity violations: filter units completely set weights 0? item missingness: implement multiple imputation interfaces? temporal ordering enforced new variables created shadows?","code":""},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"example-development-session","dir":"","previous_headings":"","what":"Example Development Session","title":"margot Extensions Development Brief","text":"","code":"# Load current code source(\"margot_simulate_7.R\") source(\"margot_shadows.R\") source(\"margot_monte_carlo.R\")  # Test basic workflow dat <- margot_simulate(n = 100, waves = 2) shadow <- create_shadow(\"measurement_error\", params = list(sigma = 0.5)) shadowed <- apply_shadow(dat, shadow)  # Verify it works diagnose_shadowing(dat, shadowed)  # Test positivity violation # Example: Treatment is impossible for individuals with high baseline risk positivity_shadow <- create_positivity_shadow(   exposure_var = \"t1_a\",   filter_fn = function(data) {     # Treatment contraindicated if baseline risk score > 2     risk_score <- data$b1 + data$b2     return(risk_score <= 2)  # TRUE for valid exposures   } )  filtered_data <- apply_shadow(dat, positivity_shadow) cat(\"Original n:\", nrow(dat), \"After positivity filter:\", nrow(filtered_data))"},{"path":"https://yourusername.github.io/margot.sim/margot-development-brief.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"margot Extensions Development Brief","text":"margot extensions provide powerful framework causal inference simulation studies. modular design allows researchers : Generate data known SCMs Apply realistic observational distortions Evaluate statistical estimator Compare methods systematically Key additions notes: - Item-level missingness allows realistic missing data patterns - Positivity violations help researchers understand causal effects poorly defined - features implemented shadows, maintaining architectural consistency Development focus maintaining clean separation truth observation adding flexibility users specify distributions, shadows, estimators.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/analyse_mask_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare data before and after masking — analyse_mask_effects","title":"Compare data before and after masking — analyse_mask_effects","text":"Compare data masking","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/analyse_mask_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare data before and after masking — analyse_mask_effects","text":"","code":"analyse_mask_effects(original, masked, variables = NULL)"},{"path":"https://yourusername.github.io/margot.sim/reference/analyse_mask_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare data before and after masking — analyse_mask_effects","text":"original Original data masked Masked data variables Variables compare","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/analyse_mask_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare data before and after masking — analyse_mask_effects","text":"Summary mask effects","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/analyse_shadow_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare data before and after shadowing — analyse_shadow_effects","title":"Compare data before and after shadowing — analyse_shadow_effects","text":"Compare data shadowing","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/analyse_shadow_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare data before and after shadowing — analyse_shadow_effects","text":"","code":"analyse_shadow_effects(original, shadowed, variables = NULL)"},{"path":"https://yourusername.github.io/margot.sim/reference/analyse_shadow_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare data before and after shadowing — analyse_shadow_effects","text":"original Original data shadowed Shadowed data variables Variables compare","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/analyse_shadow_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare data before and after shadowing — analyse_shadow_effects","text":"Summary shadow effects","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_baseline_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply baseline selection — apply_baseline_selection","title":"Apply baseline selection — apply_baseline_selection","text":"Apply baseline selection","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_baseline_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply baseline selection — apply_baseline_selection","text":"","code":"apply_baseline_selection(data, params)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_censoring_post_hoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply censoring to complete data — apply_censoring_post_hoc","title":"Apply censoring to complete data — apply_censoring_post_hoc","text":"Takes data generated margot_simulate applies censoring based stored censoring probabilities custom censoring function.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_censoring_post_hoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply censoring to complete data — apply_censoring_post_hoc","text":"","code":"apply_censoring_post_hoc(   complete_data,   censoring_type = c(\"built_in\", \"custom\"),   censoring_function = NULL,   apply_process_function = TRUE,   ... )"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_censoring_post_hoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply censoring to complete data — apply_censoring_post_hoc","text":"complete_data Data frame margot_simulate censoring_type Character: \"built_in\" uses stored probabilities, \"custom\" uses custom function censoring_function Function custom censoring apply_process_function Logical. Apply margot_process_longitudinal? ... Additional arguments processing function","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_censoring_post_hoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply censoring to complete data — apply_censoring_post_hoc","text":"Data frame censoring applied indicators created","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_classical_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply classical measurement error — apply_classical_error","title":"Apply classical measurement error — apply_classical_error","text":"Apply classical measurement error","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_classical_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply classical measurement error — apply_classical_error","text":"","code":"apply_classical_error(data, params)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_correlated_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply correlated measurement error — apply_correlated_error","title":"Apply correlated measurement error — apply_correlated_error","text":"Apply correlated measurement error","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_correlated_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply correlated measurement error — apply_correlated_error","text":"","code":"apply_correlated_error(data, params)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_dichotomisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dichotomisation — apply_dichotomisation","title":"Apply dichotomisation — apply_dichotomisation","text":"Apply dichotomisation","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_dichotomisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dichotomisation — apply_dichotomisation","text":"","code":"apply_dichotomisation(data, params)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_differential_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply differential measurement error — apply_differential_error","title":"Apply differential measurement error — apply_differential_error","text":"Apply differential measurement error","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_differential_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply differential measurement error — apply_differential_error","text":"","code":"apply_differential_error(data, params)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.censoring_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply censoring mask — apply_mask.censoring_mask","title":"Apply censoring mask — apply_mask.censoring_mask","text":"Apply censoring mask","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.censoring_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply censoring mask — apply_mask.censoring_mask","text":"","code":"# S3 method for class 'censoring_mask' apply_mask(data, mask, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.combined_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply combined mask — apply_mask.combined_mask","title":"Apply combined mask — apply_mask.combined_mask","text":"Apply combined mask","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.combined_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply combined mask — apply_mask.combined_mask","text":"","code":"# S3 method for class 'combined_mask' apply_mask(data, mask, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a mask to data — apply_mask","title":"Apply a mask to data — apply_mask","text":"Apply mask data","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a mask to data — apply_mask","text":"","code":"apply_mask(data, mask, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a mask to data — apply_mask","text":"data Data frame apply mask mask mask object created create_mask() ... Additional arguments passed specific mask methods","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a mask to data — apply_mask","text":"Modified data frame","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.item_missingness_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply item-level missingness mask — apply_mask.item_missingness_mask","title":"Apply item-level missingness mask — apply_mask.item_missingness_mask","text":"Apply item-level missingness mask","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.item_missingness_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply item-level missingness mask — apply_mask.item_missingness_mask","text":"","code":"# S3 method for class 'item_missingness_mask' apply_mask(data, mask, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.measurement_error_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply measurement error mask — apply_mask.measurement_error_mask","title":"Apply measurement error mask — apply_mask.measurement_error_mask","text":"Apply measurement error mask","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.measurement_error_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply measurement error mask — apply_mask.measurement_error_mask","text":"","code":"# S3 method for class 'measurement_error_mask' apply_mask(data, mask, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.positivity_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply positivity violation mask — apply_mask.positivity_mask","title":"Apply positivity violation mask — apply_mask.positivity_mask","text":"Apply positivity violation mask","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.positivity_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply positivity violation mask — apply_mask.positivity_mask","text":"","code":"# S3 method for class 'positivity_mask' apply_mask(data, mask, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.selection_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply selection bias mask — apply_mask.selection_mask","title":"Apply selection bias mask — apply_mask.selection_mask","text":"Apply selection bias mask","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_mask.selection_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply selection bias mask — apply_mask.selection_mask","text":"","code":"# S3 method for class 'selection_mask' apply_mask(data, mask, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_masks.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply multiple masks sequentially — apply_masks","title":"Apply multiple masks sequentially — apply_masks","text":"Apply multiple masks sequentially","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_masks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply multiple masks sequentially — apply_masks","text":"","code":"apply_masks(data, masks, verbose = FALSE)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_masks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply multiple masks sequentially — apply_masks","text":"data Data frame masks List mask objects verbose Logical, print progress?","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_masks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply multiple masks sequentially — apply_masks","text":"Data frame masks applied","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_misclassification.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply misclassification to binary variables — apply_misclassification","title":"Apply misclassification to binary variables — apply_misclassification","text":"Apply misclassification binary variables","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_misclassification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply misclassification to binary variables — apply_misclassification","text":"","code":"apply_misclassification(data, params)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.censoring_shadow.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply censoring shadow — apply_shadow.censoring_shadow","title":"Apply censoring shadow — apply_shadow.censoring_shadow","text":"Apply censoring shadow","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.censoring_shadow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply censoring shadow — apply_shadow.censoring_shadow","text":"","code":"# S3 method for class 'censoring_shadow' apply_shadow(data, shadow, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.combined_shadow.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply combined shadow — apply_shadow.combined_shadow","title":"Apply combined shadow — apply_shadow.combined_shadow","text":"Apply combined shadow","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.combined_shadow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply combined shadow — apply_shadow.combined_shadow","text":"","code":"# S3 method for class 'combined_shadow' apply_shadow(data, shadow, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a shadow to data — apply_shadow","title":"Apply a shadow to data — apply_shadow","text":"Apply shadow data","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a shadow to data — apply_shadow","text":"","code":"apply_shadow(data, shadow, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a shadow to data — apply_shadow","text":"data Data frame apply shadow shadow shadow object created create_shadow() ... Additional arguments passed specific shadow methods","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a shadow to data — apply_shadow","text":"Modified data frame","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.item_missingness_shadow.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply item-level missingness shadow — apply_shadow.item_missingness_shadow","title":"Apply item-level missingness shadow — apply_shadow.item_missingness_shadow","text":"Apply item-level missingness shadow","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.item_missingness_shadow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply item-level missingness shadow — apply_shadow.item_missingness_shadow","text":"","code":"# S3 method for class 'item_missingness_shadow' apply_shadow(data, shadow, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.measurement_error_shadow.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply measurement error shadow — apply_shadow.measurement_error_shadow","title":"Apply measurement error shadow — apply_shadow.measurement_error_shadow","text":"Apply measurement error shadow","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.measurement_error_shadow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply measurement error shadow — apply_shadow.measurement_error_shadow","text":"","code":"# S3 method for class 'measurement_error_shadow' apply_shadow(data, shadow, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.positivity_shadow.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply positivity violation shadow — apply_shadow.positivity_shadow","title":"Apply positivity violation shadow — apply_shadow.positivity_shadow","text":"Apply positivity violation shadow","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.positivity_shadow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply positivity violation shadow — apply_shadow.positivity_shadow","text":"","code":"# S3 method for class 'positivity_shadow' apply_shadow(data, shadow, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.selection_shadow.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply selection bias shadow — apply_shadow.selection_shadow","title":"Apply selection bias shadow — apply_shadow.selection_shadow","text":"Apply selection bias shadow","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadow.selection_shadow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply selection bias shadow — apply_shadow.selection_shadow","text":"","code":"# S3 method for class 'selection_shadow' apply_shadow(data, shadow, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadows.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply multiple shadows sequentially — apply_shadows","title":"Apply multiple shadows sequentially — apply_shadows","text":"Apply multiple shadows sequentially","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply multiple shadows sequentially — apply_shadows","text":"","code":"apply_shadows(data, shadows, verbose = FALSE)"},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply multiple shadows sequentially — apply_shadows","text":"data Data frame shadows List shadow objects verbose Logical, print progress?","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/apply_shadows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply multiple shadows sequentially — apply_shadows","text":"Data frame shadows applied","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/calculate_performance_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate performance metrics from MC results — calculate_performance_metrics","title":"Calculate performance metrics from MC results — calculate_performance_metrics","text":"Calculate performance metrics MC results","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/calculate_performance_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate performance metrics from MC results — calculate_performance_metrics","text":"","code":"calculate_performance_metrics(results_df)"},{"path":"https://yourusername.github.io/margot.sim/reference/check_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a variable follows a specified distribution — check_distribution","title":"Check if a variable follows a specified distribution — check_distribution","text":"Check variable follows specified distribution","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/check_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a variable follows a specified distribution — check_distribution","text":"","code":"check_distribution(x, dist, plot = TRUE)"},{"path":"https://yourusername.github.io/margot.sim/reference/check_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a variable follows a specified distribution — check_distribution","text":"x Vector values dist Distribution specification family name plot Logical, create diagnostic plot?","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/check_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a variable follows a specified distribution — check_distribution","text":"List test results","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/combine_masks.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a complex mask combining multiple distortions — combine_masks","title":"Create a complex mask combining multiple distortions — combine_masks","text":"Create complex mask combining multiple distortions","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/combine_masks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a complex mask combining multiple distortions — combine_masks","text":"","code":"combine_masks(..., name = \"combined_mask\")"},{"path":"https://yourusername.github.io/margot.sim/reference/combine_masks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a complex mask combining multiple distortions — combine_masks","text":"... Individual mask objects combine name Name combined mask","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/combine_masks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a complex mask combining multiple distortions — combine_masks","text":"composite mask object","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/combine_shadows.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a complex shadow combining multiple distortions — combine_shadows","title":"Create a complex shadow combining multiple distortions — combine_shadows","text":"Create complex shadow combining multiple distortions","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/combine_shadows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a complex shadow combining multiple distortions — combine_shadows","text":"","code":"combine_shadows(..., name = \"combined_shadow\")"},{"path":"https://yourusername.github.io/margot.sim/reference/combine_shadows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a complex shadow combining multiple distortions — combine_shadows","text":"... Individual shadow objects combine name Name combined shadow","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/combine_shadows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a complex shadow combining multiple distortions — combine_shadows","text":"composite shadow object","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/compare_mc_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare multiple Monte Carlo results — compare_mc_results","title":"Compare multiple Monte Carlo results — compare_mc_results","text":"Compare multiple Monte Carlo results","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/compare_mc_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare multiple Monte Carlo results — compare_mc_results","text":"","code":"compare_mc_results(..., names = NULL)"},{"path":"https://yourusername.github.io/margot.sim/reference/compare_mc_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare multiple Monte Carlo results — compare_mc_results","text":"... Multiple margot_mc_results objects names Optional names result set","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/compare_mc_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare multiple Monte Carlo results — compare_mc_results","text":"Comparison object","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/compute_true_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute true causal effects from simulated data — compute_true_effects","title":"Compute true causal effects from simulated data — compute_true_effects","text":"Compute true causal effects simulated data","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/compute_true_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute true causal effects from simulated data — compute_true_effects","text":"","code":"compute_true_effects(data_list, outcome_name, estimand = \"ATE\")"},{"path":"https://yourusername.github.io/margot.sim/reference/create_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexible Distribution Specifications for margot — create_distribution","title":"Flexible Distribution Specifications for margot — create_distribution","text":"file implements system specifying custom distributions data generating process, allowing skewed, heavy-tailed, non-normal distributions. Create distribution specification","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexible Distribution Specifications for margot — create_distribution","text":"","code":"create_distribution(   family,   params = list(),   link = NULL,   inverse_link = NULL,   name = NULL )"},{"path":"https://yourusername.github.io/margot.sim/reference/create_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flexible Distribution Specifications for margot — create_distribution","text":"family Distribution family name custom function params Named list distribution parameters link Link function transforming linear predictor scale inverse_link Inverse link function name Optional name distribution","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flexible Distribution Specifications for margot — create_distribution","text":"Distribution specification object","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flexible Distribution Specifications for margot — create_distribution","text":"","code":"# Normal distribution dist_normal <- create_distribution(\"normal\", params = list(sd = 1))  # Log-normal via transformation dist_lognormal <- create_distribution(   \"normal\",   params = list(sd = 0.5),   inverse_link = exp )  # Beta distribution for bounded variables dist_beta <- create_distribution(   \"beta\",   params = list(shape1 = 2, shape2 = 5) )"},{"path":"https://yourusername.github.io/margot.sim/reference/create_distribution_diagnostic_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create diagnostic plot for distribution — create_distribution_diagnostic_plot","title":"Create diagnostic plot for distribution — create_distribution_diagnostic_plot","text":"Create diagnostic plot distribution","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_distribution_diagnostic_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create diagnostic plot for distribution — create_distribution_diagnostic_plot","text":"","code":"create_distribution_diagnostic_plot(x, family)"},{"path":"https://yourusername.github.io/margot.sim/reference/create_distribution_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a set of distributions for different variable types — create_distribution_set","title":"Create a set of distributions for different variable types — create_distribution_set","text":"Create set distributions different variable types","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_distribution_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a set of distributions for different variable types — create_distribution_set","text":"","code":"create_distribution_set(   baseline = NULL,   exposure = NULL,   outcome = NULL,   confounder = NULL,   error = NULL )"},{"path":"https://yourusername.github.io/margot.sim/reference/create_distribution_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a set of distributions for different variable types — create_distribution_set","text":"baseline Distribution baseline covariates exposure Distribution exposure/treatment outcome Distribution outcome confounder Distribution time-varying confounders error Distribution error terms","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_distribution_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a set of distributions for different variable types — create_distribution_set","text":"Distribution set object","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_item_missingness_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Create item-level missingness mask — create_item_missingness_mask","title":"Create item-level missingness mask — create_item_missingness_mask","text":"Create item-level missingness mask","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_item_missingness_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create item-level missingness mask — create_item_missingness_mask","text":"","code":"create_item_missingness_mask(   variables,   missing_rate,   missing_mechanism = c(\"MCAR\", \"MAR\", \"MNAR\"),   dependent_vars = NULL,   name = \"item_missingness\" )"},{"path":"https://yourusername.github.io/margot.sim/reference/create_item_missingness_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create item-level missingness mask — create_item_missingness_mask","text":"variables Character vector variables apply missingness missing_rate Numeric. Overall missing rate (0-1) missing_mechanism Character. One \"MCAR\", \"MAR\", \"MNAR\" dependent_vars Character vector. Variables influence missingness (MAR/MNAR) name Optional name mask","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_item_missingness_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create item-level missingness mask — create_item_missingness_mask","text":"Item missingness mask object","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_item_missingness_shadow.html","id":null,"dir":"Reference","previous_headings":"","what":"Create item-level missingness shadow — create_item_missingness_shadow","title":"Create item-level missingness shadow — create_item_missingness_shadow","text":"Create item-level missingness shadow","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_item_missingness_shadow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create item-level missingness shadow — create_item_missingness_shadow","text":"","code":"create_item_missingness_shadow(   variables,   missing_rate,   missing_mechanism = c(\"MCAR\", \"MAR\", \"MNAR\"),   dependent_vars = NULL,   name = \"item_missingness\" )"},{"path":"https://yourusername.github.io/margot.sim/reference/create_item_missingness_shadow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create item-level missingness shadow — create_item_missingness_shadow","text":"variables Character vector variables apply missingness missing_rate Numeric. Overall missing rate (0-1) missing_mechanism Character. One \"MCAR\", \"MAR\", \"MNAR\" dependent_vars Character vector. Variables influence missingness (MAR/MNAR) name Optional name shadow","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_item_missingness_shadow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create item-level missingness shadow — create_item_missingness_shadow","text":"Item missingness shadow object","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Masking Framework for margot — create_mask","title":"Masking Framework for margot — create_mask","text":"file implements unified masking framework applying various observational distortions simulated data, including censoring, measurement error, selection bias. Create mask object","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Masking Framework for margot — create_mask","text":"","code":"create_mask(   type = c(\"censoring\", \"measurement_error\", \"selection\", \"item_missingness\",     \"positivity\"),   params = list(),   name = NULL )"},{"path":"https://yourusername.github.io/margot.sim/reference/create_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Masking Framework for margot — create_mask","text":"type Character string specifying mask type: \"censoring\", \"measurement_error\", \"selection\" params List parameters specific mask type name Optional name mask","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Masking Framework for margot — create_mask","text":"mask object class attributes method dispatch","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_mask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Masking Framework for margot — create_mask","text":"","code":"# Create a measurement error mask mask <- create_mask(   type = \"measurement_error\",   params = list(     variables = c(\"t1_l\", \"t2_l\"),     error_type = \"classical\",     sigma = 0.5   ) )"},{"path":"https://yourusername.github.io/margot.sim/reference/create_positivity_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Create positivity violation mask — create_positivity_mask","title":"Create positivity violation mask — create_positivity_mask","text":"Create positivity violation mask","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_positivity_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create positivity violation mask — create_positivity_mask","text":"","code":"create_positivity_mask(exposure_var, filter_fn, name = \"positivity_filter\")"},{"path":"https://yourusername.github.io/margot.sim/reference/create_positivity_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create positivity violation mask — create_positivity_mask","text":"exposure_var Character. Name exposure variable filter filter_fn Function takes data returns logical vector valid rows name Optional name mask","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_positivity_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create positivity violation mask — create_positivity_mask","text":"Positivity mask object","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_positivity_shadow.html","id":null,"dir":"Reference","previous_headings":"","what":"Create positivity violation shadow — create_positivity_shadow","title":"Create positivity violation shadow — create_positivity_shadow","text":"Create positivity violation shadow","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_positivity_shadow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create positivity violation shadow — create_positivity_shadow","text":"","code":"create_positivity_shadow(exposure_var, filter_fn, name = \"positivity_filter\")"},{"path":"https://yourusername.github.io/margot.sim/reference/create_positivity_shadow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create positivity violation shadow — create_positivity_shadow","text":"exposure_var Character. Name exposure variable filter filter_fn Function takes data returns logical vector valid rows name Optional name shadow","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_positivity_shadow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create positivity violation shadow — create_positivity_shadow","text":"Positivity shadow object","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_scm_diagram.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SCM diagram — create_scm_diagram","title":"Create SCM diagram — create_scm_diagram","text":"Creates visual representation structural causal model DAG. Can output various formats including text, mermaid, DOT.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_scm_diagram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SCM diagram — create_scm_diagram","text":"","code":"create_scm_diagram(   format = c(\"text\", \"mermaid\", \"dot\"),   waves = 3,   show_equations = FALSE,   highlight_path = NULL )"},{"path":"https://yourusername.github.io/margot.sim/reference/create_scm_diagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SCM diagram — create_scm_diagram","text":"format Output format: \"text\", \"mermaid\", \"dot\" waves Number waves show show_equations Include structural equations? highlight_path Optional path highlight (e.g., c(\"A1\", \"Y2\"))","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_scm_diagram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create SCM diagram — create_scm_diagram","text":"Character string diagram specification","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_shadow.html","id":null,"dir":"Reference","previous_headings":"","what":"Shadowing Framework for margot — create_shadow","title":"Shadowing Framework for margot — create_shadow","text":"file implements unified shadowing framework applying various observational distortions simulated data, including censoring, measurement error, selection bias. Create shadow object","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_shadow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shadowing Framework for margot — create_shadow","text":"","code":"create_shadow(   type = c(\"censoring\", \"measurement_error\", \"selection\", \"item_missingness\",     \"positivity\"),   params = list(),   name = NULL )"},{"path":"https://yourusername.github.io/margot.sim/reference/create_shadow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shadowing Framework for margot — create_shadow","text":"type Character string specifying shadow type: \"censoring\", \"measurement_error\", \"selection\" params List parameters specific shadow type. measurement_error type: - variables: Character vector variable names apply error - error_type: \"classical\", \"differential\", \"dichotomise\", \"correlated\", \"misclassification\" - \"classical\": sigma (numeric) error standard deviation - \"misclassification\": sensitivity specificity (numeric 0-1) name Optional name shadow","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_shadow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shadowing Framework for margot — create_shadow","text":"shadow object class attributes method dispatch","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/create_shadow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shadowing Framework for margot — create_shadow","text":"","code":"# Create a classical measurement error shadow shadow <- create_shadow(   type = \"measurement_error\",   params = list(     variables = c(\"t1_l\", \"t2_l\"),     error_type = \"classical\",     sigma = 0.5   ) )  # Create a misclassification shadow for binary variables misclass_shadow <- create_shadow(   type = \"measurement_error\",   params = list(     variables = \"t1_a\",     error_type = \"misclassification\",     sensitivity = 0.85,  # 85% of true positives correctly classified     specificity = 0.90   # 90% of true negatives correctly classified   ) )"},{"path":"https://yourusername.github.io/margot.sim/reference/diagnose_masking.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick diagnostic for a masked dataset — diagnose_masking","title":"Quick diagnostic for a masked dataset — diagnose_masking","text":"Quick diagnostic masked dataset","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/diagnose_masking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick diagnostic for a masked dataset — diagnose_masking","text":"","code":"diagnose_masking(original, masked, key_vars = NULL)"},{"path":"https://yourusername.github.io/margot.sim/reference/diagnose_masking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick diagnostic for a masked dataset — diagnose_masking","text":"original Original data masked Masked data key_vars Variables focus ","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/diagnose_shadowing.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick diagnostic for a shadowed dataset — diagnose_shadowing","title":"Quick diagnostic for a shadowed dataset — diagnose_shadowing","text":"Quick diagnostic shadowed dataset","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/diagnose_shadowing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick diagnostic for a shadowed dataset — diagnose_shadowing","text":"","code":"diagnose_shadowing(original, shadowed, key_vars = NULL)"},{"path":"https://yourusername.github.io/margot.sim/reference/diagnose_shadowing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick diagnostic for a shadowed dataset — diagnose_shadowing","text":"original Original data shadowed Shadowed data key_vars Variables focus ","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/dot-default_sim_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Default simulation parameter values — .default_sim_params","title":"Default simulation parameter values — .default_sim_params","text":"Default simulation parameter values","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/dot-default_sim_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default simulation parameter values — .default_sim_params","text":"","code":".default_sim_params()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_basic_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Example: Basic simulation — example_basic_simulation","title":"Example: Basic simulation — example_basic_simulation","text":"Example: Basic simulation","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_basic_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example: Basic simulation — example_basic_simulation","text":"","code":"example_basic_simulation()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_causal_censoring_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Example: Causal effects under censoring — example_causal_censoring_bias","title":"Example: Causal effects under censoring — example_causal_censoring_bias","text":"Example: Causal effects censoring","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_causal_censoring_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example: Causal effects under censoring — example_causal_censoring_bias","text":"","code":"example_causal_censoring_bias()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_censoring_mechanisms.html","id":null,"dir":"Reference","previous_headings":"","what":"Example: Different censoring mechanisms — example_censoring_mechanisms","title":"Example: Different censoring mechanisms — example_censoring_mechanisms","text":"Example: Different censoring mechanisms","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_censoring_mechanisms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example: Different censoring mechanisms — example_censoring_mechanisms","text":"","code":"example_censoring_mechanisms()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_complete_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrated Examples for margot Extensions — example_complete_workflow","title":"Integrated Examples for margot Extensions — example_complete_workflow","text":"file demonstrates complete workflows using shadowing framework, Monte Carlo simulations, flexible distributions together. Complete workflow: Evaluating TMLE complex shadowing example demonstrates: 1. Setting realistic DGP non-normal distributions 2. Applying multiple types shadows (censoring + measurement error) 3. Evaluating estimator (TMLE) via Monte Carlo 4. Comparing performance different shadowing scenarios Comprehensive example showing: - Sampling weights create target population - Multiple interventions causal contrasts - Post-hoc censoring creating observed data - Bias analysis censoring","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_complete_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Examples for margot Extensions — example_complete_workflow","text":"","code":"example_complete_workflow()  example_complete_workflow()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_complete_workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrated Examples for margot Extensions — example_complete_workflow","text":"margot_causal_sim object results","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_dynamic_interventions.html","id":null,"dir":"Reference","previous_headings":"","what":"Example: Dynamic treatment strategies — example_dynamic_interventions","title":"Example: Dynamic treatment strategies — example_dynamic_interventions","text":"Example: Dynamic treatment strategies","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_dynamic_interventions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example: Dynamic treatment strategies — example_dynamic_interventions","text":"","code":"example_dynamic_interventions()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_flexible_distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Example: Simulate with different distributions — example_flexible_distributions","title":"Example: Simulate with different distributions — example_flexible_distributions","text":"Example: Simulate different distributions","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_flexible_distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example: Simulate with different distributions — example_flexible_distributions","text":"","code":"example_flexible_distributions()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_long_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Example: Long format data — example_long_format","title":"Example: Long format data — example_long_format","text":"Example: Long format data","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_long_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example: Long format data — example_long_format","text":"","code":"example_long_format()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_masks.html","id":null,"dir":"Reference","previous_headings":"","what":"Example: Create and apply various masks — example_masks","title":"Example: Create and apply various masks — example_masks","text":"Example: Create apply various masks","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_masks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example: Create and apply various masks — example_masks","text":"","code":"example_masks()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_mc_measurement_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Example: Evaluate estimator under measurement error — example_mc_measurement_error","title":"Example: Evaluate estimator under measurement error — example_mc_measurement_error","text":"Example: Evaluate estimator measurement error","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_mc_measurement_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example: Evaluate estimator under measurement error — example_mc_measurement_error","text":"","code":"example_mc_measurement_error()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_measurement_error_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Practical example: Impact of measurement error on different estimators — example_measurement_error_comparison","title":"Practical example: Impact of measurement error on different estimators — example_measurement_error_comparison","text":"Compares different estimators (OLS, IPW, G-computation) perform increasing levels measurement error","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_measurement_error_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Practical example: Impact of measurement error on different estimators — example_measurement_error_comparison","text":"","code":"example_measurement_error_comparison()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_multiple_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Example: Multiple correlated outcomes — example_multiple_outcomes","title":"Example: Multiple correlated outcomes — example_multiple_outcomes","text":"Example: Multiple correlated outcomes","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_multiple_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example: Multiple correlated outcomes — example_multiple_outcomes","text":"","code":"example_multiple_outcomes()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_sampling_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Example: Sampling weights — example_sampling_weights","title":"Example: Sampling weights — example_sampling_weights","text":"Example: Sampling weights","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_sampling_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example: Sampling weights — example_sampling_weights","text":"","code":"example_sampling_weights()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_shadows.html","id":null,"dir":"Reference","previous_headings":"","what":"Example: Create and apply various shadows — example_shadows","title":"Example: Create and apply various shadows — example_shadows","text":"Example: Create apply various shadows","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_shadows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example: Create and apply various shadows — example_shadows","text":"","code":"example_shadows()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_test_censoring.html","id":null,"dir":"Reference","previous_headings":"","what":"Example: Test censoring indicators — example_test_censoring","title":"Example: Test censoring indicators — example_test_censoring","text":"Demonstrates censoring indicators work validates censoring logic showing future data NA not_lost indicator 0.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/example_test_censoring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example: Test censoring indicators — example_test_censoring","text":"","code":"example_test_censoring()"},{"path":"https://yourusername.github.io/margot.sim/reference/example_test_censoring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example: Test censoring indicators — example_test_censoring","text":"List original censored data","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/generate_from_dist.custom_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate from custom distribution function — generate_from_dist.custom_distribution","title":"Generate from custom distribution function — generate_from_dist.custom_distribution","text":"Generate custom distribution function","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/generate_from_dist.custom_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate from custom distribution function — generate_from_dist.custom_distribution","text":"","code":"# S3 method for class 'custom_distribution' generate_from_dist(dist, n, linear_predictor = NULL)"},{"path":"https://yourusername.github.io/margot.sim/reference/generate_from_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate values from a distribution specification — generate_from_dist","title":"Generate values from a distribution specification — generate_from_dist","text":"Generate values distribution specification","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/generate_from_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate values from a distribution specification — generate_from_dist","text":"","code":"generate_from_dist(dist, n, linear_predictor = NULL)"},{"path":"https://yourusername.github.io/margot.sim/reference/generate_from_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate values from a distribution specification — generate_from_dist","text":"dist Distribution specification n Number values generate linear_predictor Optional linear predictor values","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/generate_from_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate values from a distribution specification — generate_from_dist","text":"Vector generated values","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/generate_from_dist.parametric_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate from parametric distribution — generate_from_dist.parametric_distribution","title":"Generate from parametric distribution — generate_from_dist.parametric_distribution","text":"Generate parametric distribution","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/generate_from_dist.parametric_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate from parametric distribution — generate_from_dist.parametric_distribution","text":"","code":"# S3 method for class 'parametric_distribution' generate_from_dist(dist, n, linear_predictor = NULL)"},{"path":"https://yourusername.github.io/margot.sim/reference/get_default_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default link functions for distribution families — get_default_links","title":"Get default link functions for distribution families — get_default_links","text":"Get default link functions distribution families","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/get_default_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default link functions for distribution families — get_default_links","text":"","code":"get_default_links(family)"},{"path":"https://yourusername.github.io/margot.sim/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://yourusername.github.io/margot.sim/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_convert_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert margot data between wide and long formats — margot_convert_format","title":"Convert margot data between wide and long formats — margot_convert_format","text":"Convert margot data wide long formats","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_convert_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert margot data between wide and long formats — margot_convert_format","text":"","code":"margot_convert_format(data, format = c(\"wide\", \"long\"))"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_convert_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert margot data between wide and long formats — margot_convert_format","text":"data Data margot_simulate format Target format: \"wide\" \"long\"","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_convert_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert margot data between wide and long formats — margot_convert_format","text":"Data requested format metadata preserved","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Common distribution specifications — margot_distributions","title":"Common distribution specifications — margot_distributions","text":"Common distribution specifications","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common distribution specifications — margot_distributions","text":"","code":"margot_distributions"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_distributions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Common distribution specifications — margot_distributions","text":"object class list length 9.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_extract_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract variable at specific time point — margot_extract_var","title":"Extract variable at specific time point — margot_extract_var","text":"Extract variable specific time point","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_extract_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract variable at specific time point — margot_extract_var","text":"","code":"margot_extract_var(data, var, time)"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_extract_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract variable at specific time point — margot_extract_var","text":"data Wide format data margot_simulate var Variable name (without time prefix) time Time point","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_extract_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract variable at specific time point — margot_extract_var","text":"Vector values","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_missingness_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get summary of missingness patterns — margot_missingness_summary","title":"Get summary of missingness patterns — margot_missingness_summary","text":"Get summary missingness patterns","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_missingness_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get summary of missingness patterns — margot_missingness_summary","text":"","code":"margot_missingness_summary(data, vars = NULL)"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_missingness_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get summary of missingness patterns — margot_missingness_summary","text":"data Data margot_simulate vars Variables check (defaults )","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_missingness_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get summary of missingness patterns — margot_missingness_summary","text":"Data frame missingness summary","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_monte_carlo.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Framework for margot — margot_monte_carlo","title":"Monte Carlo Framework for margot — margot_monte_carlo","text":"file implements Monte Carlo simulation capabilities evaluating statistical estimators various shadowing conditions. Run Monte Carlo simulation evaluate estimator performance","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_monte_carlo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Framework for margot — margot_monte_carlo","text":"","code":"margot_monte_carlo(   n_reps = 500,   n_per_rep = 1000,   dgp_params = list(),   shadows = list(),   estimator_fn = NULL,   truth_fn = NULL,   extract_fn = NULL,   parallel = FALSE,   n_cores = NULL,   seed = NULL,   verbose = TRUE,   save_data = FALSE )"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_monte_carlo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Framework for margot — margot_monte_carlo","text":"n_reps Number Monte Carlo replications n_per_rep Sample size per replication dgp_params List parameters margot_simulate_causal() shadows List shadow objects apply data estimator_fn Function takes data returns estimate(s) truth_fn Optional function compute true parameter value extract_fn Optional function extract additional information parallel Logical, use parallel processing? n_cores Number cores parallel processing seed Random seed verbose Print progress? save_data Logical, save datasets replication?","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_monte_carlo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Framework for margot — margot_monte_carlo","text":"Object class \"margot_mc_results\" simulation results","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_monte_carlo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Framework for margot — margot_monte_carlo","text":"","code":"if (FALSE) { # \\dontrun{ # Define estimator my_estimator <- function(data) {   fit <- lm(t3_y ~ t2_a + t1_a + b1, data = data)   list(     estimate = coef(fit)[\"t2_a\"],     se = sqrt(diag(vcov(fit)))[\"t2_a\"],     converged = TRUE   ) }  # Run simulation results <- margot_monte_carlo(   n_reps = 500,   n_per_rep = 1000,   dgp_params = list(     waves = 3,     params = list(a_lag_y_coef = 0.3)   ),   estimator_fn = my_estimator ) } # }"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_process_longitudinal.html","id":null,"dir":"Reference","previous_headings":"","what":"Process longitudinal data in wide format with censoring — margot_process_longitudinal","title":"Process longitudinal data in wide format with censoring — margot_process_longitudinal","text":"Internal replacement margot_process_longitudinal_data_wider(). Processes longitudinal data wide format across multiple waves, handling censoring indicators optional scaling.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_process_longitudinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process longitudinal data in wide format with censoring — margot_process_longitudinal","text":"","code":"margot_process_longitudinal(   df_wide,   exposure_vars = NULL,   outcome_vars = NULL,   preserve_temporal_order = TRUE,   scale_continuous = FALSE,   not_lost_suffix = \"not_lost_following_wave\",   time_point_regex = \"^(t\\\\d+)_.*$\" )"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_process_longitudinal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process longitudinal data in wide format with censoring — margot_process_longitudinal","text":"df_wide Wide-format data frame containing time-prefixed columns (e.g., `t0_x`) exposure_vars Character vector exposure base names (without time prefixes) outcome_vars Character vector outcome base names (without time prefixes) preserve_temporal_order Logical; TRUE, maintains temporal ordering (t0_var, t1_var, ..., tn_var) scale_continuous Logical; TRUE, scales continuous variables. Default: FALSE not_lost_suffix Suffix -lost indicator. Default: \"not_lost_following_wave\" time_point_regex Regex pattern identify time-point prefixes. Default: \"^(t\\d+)_.*$\"","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_process_longitudinal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process longitudinal data in wide format with censoring — margot_process_longitudinal","text":"data frame processed columns censoring indicators","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_report_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Report margot simulation summary — margot_report_sim","title":"Report margot simulation summary — margot_report_sim","text":"Provides formatted summary margot_simulate() output object, including structural model details, sample sizes, censoring patterns.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_report_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report margot simulation summary — margot_report_sim","text":"","code":"margot_report_sim(dat)"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_report_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report margot simulation summary — margot_report_sim","text":"dat data frame tibble output margot_simulate","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_report_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report margot simulation summary — margot_report_sim","text":"Invisibly returns metadata list. Called side effect   printing formatted summary console.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_report_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report margot simulation summary — margot_report_sim","text":"","code":"dat <- margot_simulate(n = 100, waves = 3, seed = 123) margot_report_sim(dat) #>  #> ── margot simulation summary ─────────────────────────────────────────────────── #>  #> ── design ── #>  #> • n = 100 subjects #> • waves = 3 measurement occasions #> • structural model: semi-markovian #> • intervention: no #> • sampling weights: no #>  #> ── variables ── #>  #> • baseline covariates: 5 #> • exposure type: binary #> • outcome type: continuous (1 outcome) #> • outcome feedback: full #>  #> ── censoring ── #>  #> • censoring mechanism: built-in #> • base rate: 0.1 #> ℹ data format: wide (id only)"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_scm_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Display detailed SCM equations — margot_scm_details","title":"Display detailed SCM equations — margot_scm_details","text":"Provides detailed mathematical specifications structural causal model (SCM) used margot_simulate. Shows DAG structure specific parametric forms structural equations.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_scm_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display detailed SCM equations — margot_scm_details","text":"","code":"margot_scm_details(format = c(\"text\", \"latex\"), estimand = NULL)"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_scm_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display detailed SCM equations — margot_scm_details","text":"format Character: \"text\" console output, \"latex\" LaTeX estimand Character: specific estimand highlight (optional)","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_scm_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display detailed SCM equations — margot_scm_details","text":"Invisibly returns list equations","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_scm_overview.html","id":null,"dir":"Reference","previous_headings":"","what":"High-level SCM overview — margot_scm_overview","title":"High-level SCM overview — margot_scm_overview","text":"Provides high-level overview structural causal model implementation margot, including key principles, available estimands, usage guidance.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_scm_overview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"High-level SCM overview — margot_scm_overview","text":"","code":"margot_scm_overview(topic = NULL)"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_scm_overview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"High-level SCM overview — margot_scm_overview","text":"topic Optional specific topic focus ","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_scm_overview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"High-level SCM overview — margot_scm_overview","text":"Invisibly returns NULL","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate semi-markovian longitudinal data with sampling weights — margot_simulate","title":"Simulate semi-markovian longitudinal data with sampling weights — margot_simulate","text":"Generates data following semi-markovian structural causal model (SCM) : - Semi-markovian data generating process - Optional sampling weights reflect target population - Intervention functions causal inference - Post-hoc censoring bias analysis function cleanly separates three stages: 1. Data generation intervention g (specified): \\((B, L_k^g, A_k^g, Y_k^g)\\) 2. Application sampling weights match target population 3. Creation censoring indicators: \\(C_k\\) (via margot_process_longitudinal) mirrors counterfactual notation: \\(A_k \\A_k^g, C_k \\equiv 0, Y_K^{g,C=0}\\)","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate semi-markovian longitudinal data with sampling weights — margot_simulate","text":"","code":"margot_simulate(   n,   waves,   n_outcomes = 1,   n_baselines = 5,   exposure_type = \"binary\",   outcome_type = \"continuous\",   y_feedback = c(\"full\", \"y_only\", \"none\"),   censoring = list(rate = 0.1, exposure_dependence = TRUE, l_dependence = FALSE,     y_dependence = FALSE, latent_dependence = FALSE),   params = list(),   seed = NULL,   wide = TRUE,   validate_props = TRUE,   verbose = FALSE,   intervention = NULL,   sampling_weights = NULL,   apply_process_function = TRUE,   process_args = list(),   shadows = NULL )"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate semi-markovian longitudinal data with sampling weights — margot_simulate","text":"n Integer. Number subjects simulate waves Integer. Number measurement waves (time points) n_outcomes Integer. Number outcomes (1-3). Default: 1 n_baselines Integer. Number baseline covariates. Default: 5 exposure_type Character. Type exposure: \"binary\" \"continuous\". Default: \"binary\" outcome_type Character. Type outcome: \"continuous\" \"binary\". Default: \"continuous\" y_feedback Character. Type outcome feedback: \"full\", \"y_only\", \"none\". Default: \"full\" censoring List. Censoring parameters including rate, exposure_dependence, l_dependence, y_dependence, latent_dependence params List. Named list model parameters (see defaults .default_sim_params()) seed Integer. Random seed reproducibility wide Logical. Return data wide format? Default: TRUE validate_props Logical. Validate coefficients sum < 1? Default: TRUE verbose Logical. Print progress messages? Default: FALSE intervention Function. Intervention function(data, time, trt) modifies treatment sampling_weights Numeric vector length n, function(baseline_data) returns weights. Used weight baseline covariates reflect target population. NULL, weighting applied. apply_process_function Logical. TRUE, applies margot_process_longitudinal create proper censoring indicators process_args List arguments pass margot_process_longitudinal shadows shadow object list shadow objects created create_shadow() related functions. Shadows applied data generation processing simulate observational distortions like measurement error, missingness, selection bias.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate semi-markovian longitudinal data with sampling weights — margot_simulate","text":"tibble columns :   - id: Subject identifier   - b1, ..., bn: Baseline covariates   - t0_a, t1_a, ...: Treatment assignments (natural intervention)   - t1_l, t2_l, ...: Time-varying confounders   - t0_y, t1_y, ..., t(K+1)_y: Outcomes   - t*_not_lost_following_wave: Censoring indicators (apply_process_function = TRUE)   - sampling_weight: Applied weights (sampling_weights provided) returned object attribute \"margot_meta\" containing simulation parameters.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate.html","id":"directed-acyclic-graph-dag-","dir":"Reference","previous_headings":"","what":"Directed Acyclic Graph (DAG)","title":"Simulate semi-markovian longitudinal data with sampling weights — margot_simulate","text":"data generating process follows DAG structure:","code":"B --+---> L_1 ---> A_1 ---> Y_1 ---> L_2 ---> A_2 ---> Y_2 ---> ... ---> Y_K         |      |      |      |      |      |      |         |      v      v      v      v      v      v         +----> C_1     C_2     C_3    C_4     C_5     C_6  Where:   B  = Baseline covariates (time-invariant)   L_k = Time-varying confounders at wave k   A_k = Exposure/treatment at wave k   Y_k = Outcome(s) at wave k   C_k = Censoring indicator after wave k"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate.html","id":"structural-equations","dir":"Reference","previous_headings":"","what":"Structural Equations","title":"Simulate semi-markovian longitudinal data with sampling weights — margot_simulate","text":"SCM defined following structural equations. baseline (k=0): $$B \\sim \\text{MVN}(0, \\Sigma_B) \\text{ } \\Sigma_B[,j] = \\rho_B \\text{ } \\neq j$$ $$A_0 = f_{A_0}(B, U_{A_0})$$ $$Y_0 = f_{Y_0}(B, A_0, U_{Y_0})$$ wave k >= 1: $$L_k = \\beta_{B \\L} \\cdot h_k(B) + \\beta_{\\L} A_{k-1} + \\beta_{Y \\L} Y_{k-1} + U_{L_k}$$ $$A_k = f_{A_k}(B, L_k, A_{k-1}, Y_{k-1}, U_{A_k})$$ $$Y_k = f_{Y_k}(B, L_{k-1}, A_{k-1}, Y_{k-1}, U_{Y_k})$$ $$C_k = f_{C_k}(A_{k-1}, L_{k-1}, Y_{k-1}, \\theta, U_{C_k})$$ : - \\(h_k(B)\\) represents time-varying functions baseline covariates - \\(U_{\\cdot} \\sim N(0,1)\\) independent errors except noted - \\(\\theta\\) shared frailty term latent_dependence = TRUE","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate.html","id":"unmeasured-confounding","dir":"Reference","previous_headings":"","what":"Unmeasured Confounding","title":"Simulate semi-markovian longitudinal data with sampling weights — margot_simulate","text":"following unmeasured confounding structures supported: 1. **Independent errors** (default): \\(U_{\\cdot}\\) mutually independent 2. **Shared frailty censoring**: latent_dependence = TRUE,    $$\\theta \\sim N(0, \\sigma^2_{\\text{frailty}})$$    affects censoring events, inducing correlation dropout times 3. **Correlated outcomes**: n_outcomes > 1,    $$U_{Y_k} \\sim \\text{MVN}(0, \\Sigma_Y)$$    \\(\\Sigma_Y\\) -diagonal elements y_cor Note: unmeasured confounding treatment outcome design. confounding passes measured variables (B, L).","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate.html","id":"parameter-interpretation","dir":"Reference","previous_headings":"","what":"Parameter Interpretation","title":"Simulate semi-markovian longitudinal data with sampling weights — margot_simulate","text":"Key parameters structural equations: - b_l_coef: \\(\\beta_{B \\L}\\) effect baseline time-varying confounder - a_l_coef: \\(\\beta_{\\L}\\) effect past treatment confounder - y_l_coef: \\(\\beta_{Y \\L}\\) feedback past outcome confounder - l_a_coef: \\(\\beta_{L \\}\\) effect confounder treatment - a_autoreg: \\(\\beta_{\\}\\) treatment persistence - a_lag_y_coef: \\(\\beta_{\\Y}\\) causal effect treatment outcome - cens_*_coef: Effects censoring hazard","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate semi-markovian longitudinal data with sampling weights — margot_simulate","text":"Robins JM (1986). \"new approach causal inference mortality studies sustained exposure periods–application control healthy worker survivor effect.\" Mathematical Modelling, 7(9-12), 1393-1512. Hernan MA, Robins JM (2020). \"Causal Inference: .\" Boca Raton: Chapman & Hall/CRC.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate semi-markovian longitudinal data with sampling weights — margot_simulate","text":"","code":"# basic simulation following the SCM dat <- margot_simulate(   n = 1000,   waves = 3,   seed = 2025 )  # with intervention g: always treat after baseline dat_g <- margot_simulate(   n = 1000,   waves = 3,   intervention = function(data, time, trt) {     if (time == 0) return(data[[trt]])  # natural at baseline     rep(1, nrow(data))                   # always treat after   },   seed = 2025 )  # the estimand E[Y_K^{g,C=0}] can be computed as mean(dat_g$t4_y)  # Example with shadows # Create measurement error shadow me_shadow <- create_shadow(   \"measurement_error\",   params = list(     variables = c(\"t1_l\", \"t2_l\"),     error_type = \"classical\",     sigma = 0.5   ) )  # Generate data with measurement error dat_with_error <- margot_simulate(   n = 1000,   waves = 2,   shadows = me_shadow,   seed = 2025 ) # shadowed data has measurement error applied to specified variables"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate_causal.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data for causal inference with proper censoring — margot_simulate_causal","title":"Simulate data for causal inference with proper censoring — margot_simulate_causal","text":"Wrapper function simulates data multiple intervention regimes causal inference. Supports: - Multiple treatment strategies - Sampling weights target populations - Post-hoc censoring create realistic observed data - Automatic computation true causal effects - Bias analysis censoring","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate_causal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data for causal inference with proper censoring — margot_simulate_causal","text":"","code":"margot_simulate_causal(   n,   waves,   treatments,   interventions,   sampling_weights = NULL,   apply_censoring = FALSE,   use_process_function = TRUE,   common_params = list(),   ... )"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate_causal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data for causal inference with proper censoring — margot_simulate_causal","text":"n Integer. Number subjects simulate waves Integer. Number measurement waves treatments Character vector. Names treatment variables (currently uses first) interventions Named list intervention functions. function signature function(data, time, trt) return treatment values sampling_weights Weights function create target population apply_censoring Logical. Apply censoring create observed data? use_process_function Logical. Use margot_process_longitudinal? common_params List elements: - params: Parameters margot_simulate - censoring_params: Censoring parameters - verbose: Print progress? ... Additional arguments passed margot_simulate","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate_causal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data for causal inference with proper censoring — margot_simulate_causal","text":"Object class \"margot_causal_sim\" containing:   - data: List datasets intervention   - effects: True causal effects (multiple interventions)   - censoring_bias: Bias induced censoring (apply_censoring = TRUE)   - metadata: Simulation metadata","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate_causal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data for causal inference with proper censoring — margot_simulate_causal","text":"","code":"# Define interventions interventions <- list(   never_treat = function(data, time, trt) {     rep(0, nrow(data))   },   always_treat = function(data, time, trt) {     rep(1, nrow(data))   },   natural = function(data, time, trt) {     data[[trt]]  # return natural treatment   } )  # Simulate with censoring results <- margot_simulate_causal(   n = 1000,   waves = 3,   treatments = \"a\",   interventions = interventions,   apply_censoring = TRUE,   common_params = list(     params = list(a_lag_y_coef = 0.3),     verbose = TRUE   ) ) #> simulating under intervention: never_treat #> simulating under intervention: always_treat #> simulating under intervention: natural"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate_flex.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced margot_simulate with flexible distributions — margot_simulate_flex","title":"Enhanced margot_simulate with flexible distributions — margot_simulate_flex","text":"Enhanced margot_simulate flexible distributions","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate_flex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced margot_simulate with flexible distributions — margot_simulate_flex","text":"","code":"margot_simulate_flex(   n,   waves,   distributions = NULL,   ...,   validate_distributions = TRUE )"},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate_flex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced margot_simulate with flexible distributions — margot_simulate_flex","text":"n Integer. Number subjects simulate waves Integer. Number measurement waves (time points) distributions Distribution set list distributions","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/margot_simulate_flex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enhanced margot_simulate with flexible distributions — margot_simulate_flex","text":"Simulated data specified distributions","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/plot.margot_mc_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Monte Carlo results — plot.margot_mc_results","title":"Plot Monte Carlo results — plot.margot_mc_results","text":"Plot Monte Carlo results","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/plot.margot_mc_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Monte Carlo results — plot.margot_mc_results","text":"","code":"# S3 method for class 'margot_mc_results' plot(x, type = c(\"histogram\", \"qq\", \"trace\", \"bias\"), ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/print.margot_causal_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for margot_causal_sim — print.margot_causal_sim","title":"Print method for margot_causal_sim — print.margot_causal_sim","text":"Print method margot_causal_sim","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/print.margot_causal_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for margot_causal_sim — print.margot_causal_sim","text":"","code":"# S3 method for class 'margot_causal_sim' print(x, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/print.margot_mc_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for Monte Carlo results — print.margot_mc_results","title":"Print method for Monte Carlo results — print.margot_mc_results","text":"Print method Monte Carlo results","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/print.margot_mc_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for Monte Carlo results — print.margot_mc_results","text":"","code":"# S3 method for class 'margot_mc_results' print(x, digits = 4, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/print.mask_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Print mask effects — print.mask_effects","title":"Print mask effects — print.mask_effects","text":"Print mask effects","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/print.mask_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print mask effects — print.mask_effects","text":"","code":"# S3 method for class 'mask_effects' print(x, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/print.mc_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for MC comparison — print.mc_comparison","title":"Print method for MC comparison — print.mc_comparison","text":"Print method MC comparison","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/print.mc_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for MC comparison — print.mc_comparison","text":"","code":"# S3 method for class 'mc_comparison' print(x, digits = 4, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/print.shadow_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Print shadow effects — print.shadow_effects","title":"Print shadow effects — print.shadow_effects","text":"Print shadow effects","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/print.shadow_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print shadow effects — print.shadow_effects","text":"","code":"# S3 method for class 'shadow_effects' print(x, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/run_all_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"Run all margot examples — run_all_examples","title":"Run all margot examples — run_all_examples","text":"Runs example functions demonstrate package capabilities.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/run_all_examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run all margot examples — run_all_examples","text":"","code":"run_all_examples(pause = TRUE)"},{"path":"https://yourusername.github.io/margot.sim/reference/run_all_examples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run all margot examples — run_all_examples","text":"pause Logical. Pause examples?","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/summary.margot_mc_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for Monte Carlo results — summary.margot_mc_results","title":"Summary method for Monte Carlo results — summary.margot_mc_results","text":"Summary method Monte Carlo results","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/summary.margot_mc_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for Monte Carlo results — summary.margot_mc_results","text":"","code":"# S3 method for class 'margot_mc_results' summary(object, ...)"},{"path":"https://yourusername.github.io/margot.sim/reference/test_censoring_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Test simple censoring — test_censoring_simple","title":"Test simple censoring — test_censoring_simple","text":"Example function demonstrating basic censoring functionality. Generates data high censoring rate show effect.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/test_censoring_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test simple censoring — test_censoring_simple","text":"","code":"test_censoring_simple()"},{"path":"https://yourusername.github.io/margot.sim/reference/test_censoring_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test simple censoring — test_censoring_simple","text":"Invisibly returns generated data","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/validate_mask_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate mask parameters — validate_mask_params","title":"Validate mask parameters — validate_mask_params","text":"Validate mask parameters","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/validate_mask_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate mask parameters — validate_mask_params","text":"","code":"validate_mask_params(type, params)"},{"path":"https://yourusername.github.io/margot.sim/reference/validate_proportions.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate that coefficients sum to less than 1 — validate_proportions","title":"Validate that coefficients sum to less than 1 — validate_proportions","text":"Validate coefficients sum less 1","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/validate_proportions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate that coefficients sum to less than 1 — validate_proportions","text":"","code":"validate_proportions(coefs, node_name, threshold = 0.95)"},{"path":"https://yourusername.github.io/margot.sim/reference/validate_scm_assumptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate SCM assumptions in simulated data — validate_scm_assumptions","title":"Validate SCM assumptions in simulated data — validate_scm_assumptions","text":"Tests whether simulated data follows expected structural causal model checking independence assumptions, temporal ordering, structural effects.","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/validate_scm_assumptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate SCM assumptions in simulated data — validate_scm_assumptions","text":"","code":"validate_scm_assumptions(   data,   tests = c(\"independence\", \"temporal\", \"structural\"),   alpha = 0.05,   verbose = TRUE )"},{"path":"https://yourusername.github.io/margot.sim/reference/validate_scm_assumptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate SCM assumptions in simulated data — validate_scm_assumptions","text":"data Data frame margot_simulate tests Character vector tests perform alpha Significance level tests verbose Print detailed results?","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/validate_scm_assumptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate SCM assumptions in simulated data — validate_scm_assumptions","text":"List test results pass/fail summary","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/validate_shadow_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate shadow parameters — validate_shadow_params","title":"Validate shadow parameters — validate_shadow_params","text":"Validate shadow parameters","code":""},{"path":"https://yourusername.github.io/margot.sim/reference/validate_shadow_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate shadow parameters — validate_shadow_params","text":"","code":"validate_shadow_params(type, params)"},{"path":[]},{"path":"https://yourusername.github.io/margot.sim/news/index.html","id":"new-0-1-0","dir":"Changelog","previous_headings":"","what":"New","title":"[2025-06-10] margot.sim 0.1.0","text":"Initial release margot.sim package Classical measurement error continuous variables Misclassification bias binary variables (sensitivity/specificity) Differential measurement error Dichotomization thresholds Correlated errors across variables Item-level missingness (MCAR, MAR, MNAR mechanisms) Positivity violations (filtering impossible exposures) Selection bias (baseline post-treatment) Parallel processing support Automatic performance metrics (bias, variance, MSE, coverage) Comparison functions multiple methods Support parametric custom distributions Distribution sets multivariate outcomes Integration margot_simulate() function via shadows parameter Comprehensive unit tests using testthat Package website using pkgdown Examples demonstrating complete workflows","code":""},{"path":"https://yourusername.github.io/margot.sim/news/index.html","id":"improved-0-1-0","dir":"Changelog","previous_headings":"","what":"Improved","title":"[2025-06-10] margot.sim 0.1.0","text":"Replaced external dependency margot::margot_process_longitudinal_data_wider() internal margot.sim::margot_process_longitudinal() function margot-simulate-core.R - Main simulation function margot-simulate-censoring.R - Censoring functions margot-simulate-causal.R - Causal inference wrapper margot-simulate-utils.R - Utility functions margot-scm-docs.R - SCM documentation margot-simulate-examples.R - Example functions Changed terminology “masks/masking” “shadows/shadowing” better metaphor Added startup message showing package version (can suppressed options(margot.sim.quiet = TRUE))","code":""}]
